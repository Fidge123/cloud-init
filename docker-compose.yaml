services:
  npm:
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./npm/data:/data
      - ./npm/letsencrypt:/etc/letsencrypt
    labels:
      - "com.centurylinklabs.watchtower.monitor-only=true"
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 30s
      timeout: 3s

  authelia:
    image: authelia/authelia
    restart: unless-stopped
    volumes:
      - ./authelia:/config
    # expose:
    #   - 9091
    env_file:
      - secrets/authelia.env

  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    restart: unless-stopped
    # ports:
    #   - "3000:3000"
    env_file:
      - secrets/umami.env
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5

  rallly:
    image: lukevella/rallly:latest
    restart: unless-stopped
    # ports:
    #   - 3000:3000
    env_file:
      - secrets/rallly.env

  metube:
    image: ghcr.io/alexta69/metube
    restart: unless-stopped
    # ports:
    #   - "8081:8081"
    environment:
      - DELETE_FILE_ON_TRASHCAN=true
    volumes:
      - /path/to/downloads:/downloads

  # yt:
  #   image: quay.io/invidious/invidious:latest
  #   restart: unless-stopped
  #   ports:
  #     - "127.0.0.1:3000:3000"
  #   volumes:
  #     - ./invidious:/config
  #   environment:
  #     - INVIDIOUS_CONFIG_FILE=config/invidious.yml
  #   healthcheck:
  #     test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1
  #     interval: 30s
  #     timeout: 5s
  #     retries: 2
  #   logging:
  #     options:
  #       max-size: "100M"
  #       max-file: "4"

  pdf:
    image: frooodle/s-pdf:latest-ultra-lite
    restart: unless-stopped
    # ports:
    #   - '8080:8080'
    volumes:
      - ./pdf/trainingData:/usr/share/tessdata
      - ./pdf/extraConfigs:/configs
    env_file:
      - secrets/stirling.env

  miniflux:
    image: miniflux/miniflux:latest
    restart: unless-stopped
    # ports:
    #   - "8080:8080"
    env_file:
      - secrets/miniflux.env

  tools:
    image: corentinth/it-tools:latest
    restart: unless-stopped
    # ports:
    #   - 80:80

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    volumes:
      - ./pgadmin:/pgadmin4/servers.json
    # ports:
    #   - "80:80"
    env_file:
      - secrets/pgadmin.env

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - secrets/watchtower.env

networks:
  default:
    external: true
    name: net
